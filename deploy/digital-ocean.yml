# Digital Ocean App Platform Specification
# Jarvis AI System - Complete Next.js Monorepo Deployment
# Documentation: https://docs.digitalocean.com/products/app-platform/reference/app-spec/

spec:
  name: jarvis-ai-system
  region: nyc
  
  # Main Application - Next.js with SSR and API Routes
  services:
    - name: jarvis-app
      source_dir: /
      # GitHub repository configuration - UPDATE THESE VALUES:
      # github:
      #   repo: YOUR_GITHUB_USERNAME/YOUR_REPO_NAME
      #   branch: main
      #   deploy_on_push: true
      
      # Build configuration for Next.js
      build_command: npm ci && npm run build
      run_command: npm start
      environment_slug: node-js
      instance_count: 1
      instance_size_slug: basic-xxs
      
      # HTTP configuration
      http_port: 3000
      
      # Routes - Handle all traffic
      routes:
        - path: /
      
      # Health check
      health_check:
        http_path: /api/health
        initial_delay_seconds: 30
        period_seconds: 10
        timeout_seconds: 5
        success_threshold: 1
        failure_threshold: 3
      
      # Environment variables
      envs:
        # Build-time variables
        - key: NODE_ENV
          value: production
        - key: NEXT_PUBLIC_APP_NAME
          value: "Jarvis AI System"
        - key: NEXT_PUBLIC_VERSION
          value: "1.0.0"
        - key: NEXT_PUBLIC_API_URL
          value: "${APP_URL}"
        
        # AI Service API Keys (Runtime secrets)
        - key: OPENAI_API_KEY
          scope: RUN_TIME
          type: SECRET
        - key: ANTHROPIC_API_KEY
          scope: RUN_TIME
          type: SECRET
        - key: GOOGLE_AI_API_KEY
          scope: RUN_TIME
          type: SECRET
        - key: VERTEX_AI_PROJECT_ID
          scope: RUN_TIME
          type: SECRET
        - key: VERTEX_AI_LOCATION
          scope: RUN_TIME
          type: SECRET
        - key: VERTEX_AI_CREDENTIALS
          scope: RUN_TIME
          type: SECRET
        
        # CrewAI Configuration
        - key: CREWAI_API_KEY
          scope: RUN_TIME
          type: SECRET
        - key: CREWAI_MODEL
          scope: RUN_TIME
          value: "gpt-4"
        
        # Notion Integration
        - key: NOTION_TOKEN
          scope: RUN_TIME
          type: SECRET
        - key: NOTION_DATABASE_ID
          scope: RUN_TIME
          type: SECRET
        
        # Application Configuration
        - key: DATABASE_URL
          scope: RUN_TIME
          type: SECRET
        - key: NEXTAUTH_SECRET
          scope: RUN_TIME
          type: SECRET
        - key: NEXTAUTH_URL
          scope: RUN_TIME
          value: "${APP_URL}"
        
        # Roo Commander Configuration
        - key: ROO_COMMANDER_MODE
          scope: RUN_TIME
          value: "production"
        - key: ROO_SESSION_STORAGE
          scope: RUN_TIME
          value: "persistent"

  # Optional: Database (PostgreSQL)
  databases:
    - name: jarvis-db
      engine: PG
      version: "14"
      size: db-s-dev-database
      num_nodes: 1

  # Static Assets (if using CDN)
  static_sites:
    - name: jarvis-assets
      source_dir: /public
      # GitHub repository configuration - UPDATE THESE VALUES:
      # github:
      #   repo: YOUR_GITHUB_USERNAME/YOUR_REPO_NAME
      #   branch: main
      #   deploy_on_push: true
      
      build_command: echo "Static assets ready"
      output_dir: /
      
      # Routes for static assets
      routes:
        - path: /assets
        - path: /images
        - path: /icons
        - path: /favicon.ico

# Monitoring and Alerts
alerts:
  - rule: CPU_UTILIZATION
    value: 80
    operator: GREATER_THAN
    window: FIVE_MINUTES
    disabled: false
  - rule: MEM_UTILIZATION
    value: 80
    operator: GREATER_THAN
    window: FIVE_MINUTES
    disabled: false
  - rule: DEPLOYMENT_FAILED
    disabled: false
  - rule: DOMAIN_FAILED
    disabled: false

# Features and Configuration
features:
  - buildpack-stack=ubuntu-22

# Ingress configuration for routing
ingress:
  rules:
    # API routes
    - component:
        name: jarvis-app
      match:
        path:
          prefix: /api
      cors:
        allow_origins:
          - exact: "${APP_URL}"
        allow_methods:
          - GET
          - POST
          - PUT
          - DELETE
          - OPTIONS
          - PATCH
        allow_headers:
          - Content-Type
          - Authorization
          - X-Requested-With
          - X-API-Key
        allow_credentials: true
    
    # Static assets
    - component:
        name: jarvis-assets
      match:
        path:
          prefix: /assets
    - component:
        name: jarvis-assets
      match:
        path:
          prefix: /images
    - component:
        name: jarvis-assets
      match:
        path:
          prefix: /icons
    
    # Main application (catch-all)
    - component:
        name: jarvis-app
      match:
        path:
          prefix: /

# Domains (configure after deployment)
# domains:
#   - domain: your-domain.com
#     type: PRIMARY
#   - domain: www.your-domain.com
#     type: ALIAS